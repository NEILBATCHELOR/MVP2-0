"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clearAllBodyScrollLocks = exports.disableBodyScroll = void 0;
// Track if body scroll is locked
var isLocked = false;
var originalOverflow = null;
var originalPaddingRight = null;
var originalPosition = null;
var originalTop = null;
var originalLeft = null;
var originalWidth = null;
var originalHeight = null;
var scrollPosition = null;
/**
 * Check if the device is iOS
 */
function isIOS() {
    return (/iPad|iPhone|iPod/.test(navigator.userAgent) &&
        !window.MSStream);
}
/**
 * Disables body scroll while preserving scroll position
 */
function disableBodyScroll() {
    if (!isLocked) {
        var body = document.body;
        var scrollbarWidth = window.innerWidth - body.clientWidth;
        // Store original values
        originalOverflow = body.style.overflow;
        originalPaddingRight = body.style.paddingRight;
        originalPosition = body.style.position;
        originalTop = body.style.top;
        originalLeft = body.style.left;
        originalWidth = body.style.width;
        originalHeight = body.style.height;
        // Store scroll position
        scrollPosition = window.scrollY;
        // Prevent body scroll
        body.style.overflow = 'hidden';
        // Prevent layout shift by adding padding for scrollbar
        if (scrollbarWidth > 0) {
            body.style.paddingRight = "".concat(scrollbarWidth, "px");
        }
        // iOS Safari specific handling
        if (isIOS()) {
            body.style.position = 'fixed';
            body.style.top = "-".concat(scrollPosition, "px");
            body.style.left = '0';
            body.style.width = '100%';
            body.style.height = '100%';
            body.style.touchAction = 'none';
        }
        isLocked = true;
    }
}
exports.disableBodyScroll = disableBodyScroll;
/**
 * Re-enables body scroll
 */
function clearAllBodyScrollLocks() {
    if (isLocked) {
        var body = document.body;
        // Restore original values
        body.style.overflow = originalOverflow || '';
        body.style.paddingRight = originalPaddingRight || '';
        body.style.position = originalPosition || '';
        body.style.top = originalTop || '';
        body.style.left = originalLeft || '';
        body.style.width = originalWidth || '';
        body.style.height = originalHeight || '';
        body.style.touchAction = '';
        // Restore scroll position for iOS
        if (isIOS() && scrollPosition !== null) {
            window.scrollTo(0, scrollPosition);
        }
        originalOverflow = null;
        originalPaddingRight = null;
        originalPosition = null;
        originalTop = null;
        originalLeft = null;
        originalWidth = null;
        originalHeight = null;
        scrollPosition = null;
        isLocked = false;
    }
}
exports.clearAllBodyScrollLocks = clearAllBodyScrollLocks;
//# sourceMappingURL=body-scroll-lock.js.map
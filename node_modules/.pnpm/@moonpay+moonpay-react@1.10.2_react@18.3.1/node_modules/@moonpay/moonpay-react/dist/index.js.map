{"version":3,"sources":["../src/components/MoonPayBalanceDepositWidget.tsx","../src/constants.ts","../src/helpers.ts","../../js-sdk/src/loader.ts","../src/components/MoonPayProvider.tsx","../../common/src/environment.ts","../../common/src/Logger.ts","../../common/src/react/useHasOverflow.tsx","../../common/src/react/useIsMounted.tsx","../../common/src/react/useRenderCount.ts","../../common/src/react/useScript.ts","../../common/src/uuid.ts","../src/useSdk.tsx","../src/logger.ts","../src/components/MoonPayWidget.tsx","../src/components/MoonPayBalanceWithdrawWidget.tsx","../src/components/MoonPayBuyWidget.tsx","../src/components/MoonPayConsumerKycWidget.tsx","../src/components/MoonPayNftCheckoutWidget.tsx","../src/components/MoonPayNftClaimWidget.tsx","../src/components/MoonPaySellWidget.tsx","../src/components/MoonPaySwapsCustomerSetupWidget.tsx","../src/components/MoonPaySwapWidget.tsx","../src/components/MoonPayTopUpLedgerWidget.tsx","../src/components/MoonPayTopupWidget.tsx","../src/components/MoonPayTransactionTrackerWidget.tsx","../src/components/MoonPayWithdrawLedgerWidget.tsx"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getMoonPayBalanceDepositConfigFromProps } from '../helpers';\nimport type { MoonPayBalanceDepositProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayBalanceDepositWidget(props: MoonPayBalanceDepositProps) {\n  const { environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getMoonPayBalanceDepositConfigFromProps({\n        props,\n        environment,\n        debug: false,\n      }),\n    [props, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","export const MOONPAY_WIDGET_CONTAINER_ID = 'moonpay-react-sdk-embedded-frame';\n","import { MOONPAY_WIDGET_CONTAINER_ID } from './constants';\nimport type {\n  MoonPayBalanceDepositWidgetConfig,\n  MoonPayBalanceWithdrawWidgetConfig,\n  MoonPayBuyConfig,\n  MoonPayClaimWidgetConfig,\n  MoonPayConsumerKycConfig,\n  MoonPayDebug,\n  MoonPayEnvironment,\n  MoonPayLegacyConfig,\n  MoonPayNftWidgetConfig,\n  MoonPayPartnerTopupConfig,\n  MoonPaySellConfig,\n  MoonPaySwapConfig,\n  MoonPaySwapsCustomerSetupConfig,\n  MoonPayTopUpBalanceLedgerWidgetConfig,\n  MoonPayTransactionTrackerConfig,\n  MoonPayWidgetProps,\n  MoonPayWithdrawLedgerWidgetConfig,\n  TFlow,\n} from './types';\n\ntype CommonProps<T extends TFlow> = {\n  debug: MoonPayDebug;\n  environment: MoonPayEnvironment;\n  props: MoonPayWidgetProps<T>;\n};\n\ntype ConfigConversionParams<T extends TFlow> = T extends\n  | 'legacy'\n  | 'moonPayBalanceDeposit'\n  | 'moonPayBalanceWithdraw'\n  ? Omit<CommonProps<T>, 'apiKey' | 'signature'>\n  : CommonProps<T> & {\n      apiKey: string;\n      signature: string;\n    };\n\nexport const getBuyConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'buy'>): MoonPayBuyConfig => {\n  const {\n    // params\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n    // other\n    overlayNode,\n  } = props;\n\n  const params: MoonPayBuyConfig['params'] = {\n    apiKey,\n    signature,\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n  };\n\n  const handlers: MoonPayBuyConfig['handlers'] = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'buy',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    baseOrigin,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    overlayNode,\n  };\n};\n\nexport const getSellConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'sell'>): MoonPaySellConfig => {\n  const {\n    // params\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    baseOrigin,\n    refundWalletAddress,\n    refundWalletAddresses,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params: MoonPaySellConfig['params'] = {\n    apiKey,\n    signature,\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    refundWalletAddress,\n    refundWalletAddresses,\n  };\n\n  const handlers: MoonPaySellConfig['handlers'] = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'sell',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    baseOrigin,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getSwapsCustomerSetupConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n}: ConfigConversionParams<\n  'swapsCustomerSetup'\n>): MoonPaySwapsCustomerSetupConfig => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n  };\n\n  return {\n    flow: 'swapsCustomerSetup',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getConsumerKycConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n}: ConfigConversionParams<'consumerKyc'>): MoonPayConsumerKycConfig => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n  };\n\n  const handlers = {\n    onClose,\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n  };\n\n  return {\n    flow: 'consumerKyc',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getNftConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'nft'>): MoonPayNftWidgetConfig => {\n  const {\n    // params\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    signature,\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'nft',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    baseOrigin,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getClaimConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'claim'>): MoonPayClaimWidgetConfig => {\n  const {\n    contractId,\n    tokenId,\n    initialScreen,\n    // handlers\n    onClose,\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    baseOrigin,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    signature,\n    contractId,\n    tokenId,\n    initialScreen,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'claim',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getTopUpLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'topup'>): MoonPayTopUpBalanceLedgerWidgetConfig => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'topup',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getMoonPayBalanceDepositConfigFromProps = ({\n  props,\n  debug,\n  environment,\n}: ConfigConversionParams<\n  'moonPayBalanceDeposit'\n>): MoonPayBalanceDepositWidgetConfig => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    onBalanceDepositTransferConfirmed,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    theme,\n    themeId,\n  };\n\n  const handlers = {\n    onClose,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    onBalanceDepositTransferConfirmed,\n  };\n\n  return {\n    flow: 'moonPayBalanceDeposit',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getMoonPayBalanceWithdrawConfigFromProps = ({\n  props,\n  debug,\n  environment,\n}: ConfigConversionParams<\n  'moonPayBalanceWithdraw'\n>): MoonPayBalanceWithdrawWidgetConfig => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    theme,\n    themeId,\n  };\n\n  const handlers = {\n    onClose,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'moonPayBalanceWithdraw',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    baseOrigin,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getWithdrawLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'withdraw'>): MoonPayWithdrawLedgerWidgetConfig => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'withdraw',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getLegacyConfigFromProps = ({\n  props,\n  debug,\n  environment,\n}: ConfigConversionParams<'legacy'>): MoonPayLegacyConfig => {\n  const {\n    // params\n    url,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params = {\n    url,\n  };\n\n  const handlers = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'legacy',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getSwapConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'swap'>): MoonPaySwapConfig => {\n  const {\n    // params\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params: MoonPaySwapConfig['params'] = {\n    apiKey,\n    signature,\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n  };\n\n  const handlers: MoonPayBuyConfig['handlers'] = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'swap',\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    baseOrigin,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n  };\n};\n\nexport const getTransactionTrackerConfigFromProps = ({\n  props,\n  debug,\n  environment,\n}: ConfigConversionParams<\n  'transactionTracker'\n>): MoonPayTransactionTrackerConfig => {\n  const {\n    // params\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n  } = props;\n\n  const params: MoonPayTransactionTrackerConfig['params'] = {\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n  };\n\n  const handlers: MoonPayBuyConfig['handlers'] = {\n    onClose,\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n  };\n\n  return {\n    flow: 'transactionTracker',\n    variant: props.variant,\n    environment,\n    params,\n    baseOrigin,\n    debug,\n    handlers,\n    auth,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    useWarnBeforeRefresh,\n  };\n};\n\nexport const getPartnerTopupConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature,\n}: ConfigConversionParams<'partnerTopup'>): MoonPayPartnerTopupConfig => {\n  const {\n    enabledMethods,\n    cryptoAmount,\n    fromDefaultCurrencyCode,\n    fromChainName,\n    toChainName,\n    testLocation,\n  } = props;\n\n  // Partner topup widget will support all buy config params\n  const buyConfigProps = getBuyConfigFromProps({\n    props,\n    apiKey,\n    debug,\n    environment,\n    signature,\n  });\n\n  const params: MoonPayPartnerTopupConfig['params'] = {\n    ...buyConfigProps.params,\n    enabledMethods,\n    cryptoAmount,\n    fromDefaultCurrencyCode,\n    fromChainName,\n    toChainName,\n    testLocation,\n  };\n\n  return {\n    ...buyConfigProps,\n    flow: 'partnerTopup',\n    params,\n  };\n};\n","import type { MoonPayWebSdkInitFn, WindowMoonPayWebSdk } from '@web-sdk';\ndeclare const window: Window & WindowMoonPayWebSdk;\n\nconst scriptLoadingStatus = {\n  isLoading: false,\n  isLoaded: false,\n};\n\nexport async function loadMoonPay(\n  version: string | null = 'v1',\n): Promise<MoonPayWebSdkInitFn | undefined> {\n  return new Promise((resolve, reject) => {\n    const scriptSrc = `https://static.moonpay.com/web-sdk/${version}/moonpay-web-sdk.min.js`;\n    const existingScript = document.querySelector(`script[src=\"${scriptSrc}\"]`);\n\n    scriptLoadingStatus.isLoading = true;\n\n    const checkLoaded = (count = 0) => {\n      if (window.MoonPayWebSdk) {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = true;\n        resolve(window.MoonPayWebSdk.init);\n        return;\n      }\n\n      // Timeout after 10 seconds\n      if (count > 100) {\n        scriptLoadingStatus.isLoading = false;\n        reject(new Error('Loading MoonPayWebSdk script timed out.'));\n        return;\n      }\n\n      setTimeout(() => checkLoaded(count + 1), 100);\n    };\n\n    if (existingScript) {\n      checkLoaded();\n    } else {\n      const script = document.createElement('script');\n      script.async = true;\n      script.src = scriptSrc;\n\n      script.addEventListener('load', () => {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = true;\n        resolve(window.MoonPayWebSdk?.init);\n      });\n\n      script.addEventListener('error', () => {\n        scriptLoadingStatus.isLoading = false;\n        scriptLoadingStatus.isLoaded = false;\n        reject(new Error('Failed to load MoonPayWebSdk script.'));\n      });\n\n      document.body.appendChild(script);\n    }\n  });\n}\n","import { loadMoonPay } from '@js-sdk';\nimport {\n  ReactNode,\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { getEnvironmentFromApiKey } from '@common';\nimport { MoonPayInitFn, MoonPayWebSdkConfig } from '../types';\n\ninterface MoonPayProviderProps {\n  children: ReactNode;\n  apiKey: string;\n  debug?: boolean;\n}\n\ntype MoonPayContext = Omit<MoonPayProviderProps, 'children'> & {\n  init?: MoonPayInitFn;\n  environment: MoonPayWebSdkConfig['environment'];\n};\n\nexport const MoonPayContext = createContext<MoonPayContext>({\n  apiKey: '',\n  environment: 'sandbox',\n  debug: false,\n});\n\nexport const MoonPayProvider = ({\n  children,\n  apiKey,\n  debug = false,\n}: MoonPayProviderProps) => {\n  const environment = getEnvironmentFromApiKey(apiKey);\n\n  const [contextState, setContextState] = useState<MoonPayContext>({\n    apiKey,\n    environment,\n    debug,\n  });\n\n  const load = useCallback(async () => {\n    const moonPay = await loadMoonPay();\n    setContextState((state) => ({ ...state, init: moonPay }));\n  }, []);\n\n  useEffect(() => {\n    if (!contextState.init) load();\n  }, [load, contextState.init]);\n\n  return (\n    <MoonPayContext.Provider value={contextState}>\n      {children}\n    </MoonPayContext.Provider>\n  );\n};\n","export function getEnvironmentFromApiKey(apiKey: string) {\n  return apiKey.startsWith('pk_live') || apiKey.startsWith('sk_live')\n    ? 'production'\n    : 'sandbox';\n}\n","export interface LoggerLikeInstance {\n  info(...data: any[]): void;\n  warn(...data: any[]): void;\n  error(...data: any[]): void;\n}\n\nexport type WithLogger<T> = T & {\n  logger?: Logger;\n};\n\nconst NOOP = () => undefined;\n\nconst noopLogger: LoggerLikeInstance = {\n  info: NOOP,\n  warn: NOOP,\n  error: NOOP,\n};\n\nexport class Logger {\n  private prefix: string[];\n\n  private logger: LoggerLikeInstance;\n\n  constructor({\n    logger,\n    prefix,\n  }: {\n    logger: LoggerLikeInstance;\n    prefix?: string[];\n  }) {\n    this.logger = logger;\n    this.prefix = prefix ?? ['Logger'];\n  }\n\n  if(condition: boolean) {\n    return condition ? this : new Logger({ logger: noopLogger });\n  }\n\n  info(...data: any[]) {\n    this.logger.info(`[${this.prefix}]`, ...data);\n  }\n\n  warn(...data: any[]) {\n    this.logger.warn(`[${this.prefix}]`, ...data);\n  }\n\n  error(...data: any[]) {\n    this.logger.error(`[${this.prefix}]`, ...data);\n  }\n}\n\nexport default Logger;\n","import { RefObject, useLayoutEffect, useState } from 'react';\n\nexport default function useHasOverflow(\n  ref: RefObject<HTMLDivElement>,\n): boolean {\n  const [hasOverflow, setHasOverflow] = useState(false);\n\n  useLayoutEffect(() => {\n    const { current } = ref;\n\n    if (!current) return;\n\n    const overflow =\n      current.scrollHeight > current.clientHeight ||\n      (!!current.parentElement &&\n        current.parentElement.scrollHeight >\n          current.parentElement.clientHeight);\n\n    setHasOverflow(overflow);\n  }, [ref]);\n\n  return hasOverflow;\n}\n","// Based on (MIT license):\n// https://github.com/hupe1980/react-is-mounted-hook\n\nimport { useRef, useEffect, useCallback } from 'react';\n\nexport default function useIsMounted(): () => boolean {\n  const ref = useRef(false);\n\n  useEffect(() => {\n    ref.current = true;\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n\n  return useCallback(() => ref.current, [ref]);\n}\n","import { useRef } from 'react';\n\n/**\n * Simple hook that logs to console every time function component is called\n * (rendered) with a counter.\n *\n * @param name Name or identifier to log.\n * @param delay Delay after which to log the count and reset it.\n */\nconst useRenderCount = (name: string, delay = 100): void => {\n  const logTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const count = useRef(0);\n  count.current += 1;\n\n  clearTimeout((logTimeout.current as unknown) as number);\n  logTimeout.current = setTimeout(() => {\n    console.log('render', name, count.current);\n    count.current = 0;\n  }, delay);\n};\n\nexport default useRenderCount;\n","/* eslint-disable consistent-return */\nimport { useEffect, useState } from 'react';\n\nexport interface UseScriptProps {\n  url: string;\n  async?: boolean;\n  defer?: boolean;\n  onLoad?: (e: Event) => void;\n  onAlreadyLoaded?: () => void;\n  onError?: (e: ErrorEvent) => void;\n  skip?: boolean;\n  scriptTagAttributes?: Record<string, string>;\n}\n\nexport interface UseScript {\n  loaded: boolean;\n  error: boolean;\n}\n\nconst cachedScripts = new Set();\n\nconst useScript = ({\n  async = true,\n  defer = false,\n  onError,\n  onLoad,\n  onAlreadyLoaded,\n  skip,\n  url,\n  scriptTagAttributes,\n}: UseScriptProps): UseScript => {\n  const [state, setState] = useState({\n    loaded: cachedScripts.has(url),\n    error: false,\n  });\n\n  useEffect(() => {\n    // If skip prop is true, skip loading as well.\n    if (skip) {\n      return;\n    }\n\n    // If the script is already loaded, don't even try to do it.\n    if (state.loaded) {\n      onAlreadyLoaded?.();\n      return;\n    }\n\n    const script = document.createElement('script');\n\n    script.src = url;\n    // See: https://javascript.info/script-async-defer#dynamic-scripts\n    // for info about the default `async` behavior of dynamically added scripts.\n    script.async = async;\n    script.defer = defer;\n\n    if (scriptTagAttributes) {\n      Object.entries(scriptTagAttributes).forEach(([key, value]) => {\n        script.setAttribute(key, value);\n      });\n    }\n\n    const onScriptLoad = (e: Event) => {\n      // Add url to set so we don't load script twice\n      cachedScripts.add(url);\n      setState({\n        loaded: true,\n        error: false,\n      });\n      onLoad?.(e);\n    };\n\n    const onScriptError = (e: ErrorEvent) => {\n      // Remove script from cache so we can retry\n      cachedScripts.delete(url);\n      setState({\n        loaded: true,\n        error: true,\n      });\n      onError?.(e);\n    };\n\n    script.addEventListener('load', onScriptLoad);\n    script.addEventListener('error', onScriptError);\n\n    // Add script to the document (start loading)\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n      script.removeEventListener('load', onScriptLoad);\n      script.removeEventListener('error', onScriptError);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip]);\n\n  return {\n    loaded: state.loaded,\n    error: state.error,\n  };\n};\n\nexport default useScript;\n","/* eslint-disable no-bitwise */\n// Copy from rootdir/src/utils/uuid.ts\n\n// Based on the answers from: https://stackoverflow.com/q/105034\n// Specifically: https://stackoverflow.com/a/2117523\nexport const uuidV4: () => string =\n  typeof window.crypto !== 'undefined' &&\n  typeof window.crypto.getRandomValues !== 'undefined'\n    ? () => {\n        // If we have a cryptographically secure PRNG, use that\n        return (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(\n          /[018]/g,\n          (c: number) =>\n            (\n              c ^\n              ((crypto.getRandomValues(new Uint8Array(1))[0] as number) &\n                (15 >> (c / 4)))\n            ).toString(16),\n        );\n      }\n    : () => {\n        // Otherwise, just use Math.random\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n          const r = (Math.random() * 16) | 0;\n          const v = c === 'x' ? r : (r & 0x3) | 0x8;\n          return v.toString(16);\n        });\n      };\n\n// Some API do not like the formal string representation of UUID (https://www.rfc-editor.org/rfc/rfc4122#page-4)\n// replaceAll cannot be used as it is not supported by IE\nexport const uuidV4NoDashes: () => string = () => uuidV4().replace(/-/g, '');\n\nexport const isValidUUID = (uuid: string): boolean => {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n};\n","import { useCallback, useContext, useEffect, useRef } from 'react';\nimport { MoonPayContext } from 'src/components/MoonPayProvider';\nimport { Logger } from 'src/logger';\nimport type {\n  MoonPayWebSdk,\n  MoonPayWebSdkConfig,\n  OnUrlSignatureRequested,\n} from 'src/types';\n\nexport const useSdk = (\n  config: MoonPayWebSdkConfig,\n  visible: boolean,\n  onUrlSignatureRequested?: OnUrlSignatureRequested,\n) => {\n  const sdk = useRef<MoonPayWebSdk | null>(null);\n  const { init, debug } = useContext(MoonPayContext);\n  const logger = useRef(new Logger().if(debug || false));\n\n  const handleUpdateSignatureAndShow = useCallback(async () => {\n    if (!sdk.current) {\n      return;\n    }\n\n    if (\n      !onUrlSignatureRequested &&\n      ('walletAddress' in config || 'walletAddresses' in config)\n    ) {\n      logger.current.warn(\n        'You must provide an `onUrlSignatureRequested` function to sign the URL when using the `walletAddress` or `walletAddresses` prop',\n      );\n    }\n\n    if (onUrlSignatureRequested) {\n      const url = sdk.current.generateUrlForSigning();\n\n      try {\n        const updatedSignature = await onUrlSignatureRequested?.(url);\n        if (!updatedSignature) {\n          return;\n        }\n\n        sdk.current?.updateSignature(updatedSignature);\n      } catch (e) {\n        logger.current.error(\n          'Something went wrong calling the provided `onUrlSignatureRequested` function:',\n          e,\n        );\n      }\n    }\n\n    if (visible) {\n      sdk.current?.show();\n    }\n  }, [onUrlSignatureRequested, visible, config]);\n\n  useEffect(() => {\n    // If the SDK is already initialized, close it and reinitialize it with new config\n    if (sdk.current) {\n      sdk.current.close();\n    }\n\n    const newSdk = init?.(config) || null;\n    sdk.current = newSdk;\n\n    handleUpdateSignatureAndShow();\n  }, [init, config, handleUpdateSignatureAndShow]);\n};\n","import { Logger as BaseLogger } from '@common';\n\nexport class Logger extends BaseLogger {\n  constructor() {\n    super({ logger: console, prefix: ['MoonPay React SDK'] });\n  }\n}\n","import { MOONPAY_WIDGET_CONTAINER_ID } from '../constants';\nimport type {\n  MoonPayWebSdkConfig,\n  OnUrlSignatureRequested,\n  StylingProps,\n} from '../types';\nimport { useSdk } from '../useSdk';\n\ninterface MoonPayWidgetProps extends StylingProps {\n  onUrlSignatureRequested?: OnUrlSignatureRequested;\n  visible?: boolean;\n  config: MoonPayWebSdkConfig;\n}\n\nconst defaultStyles = {\n  width: '424px',\n  height: '656px',\n  margin: '32px 28px 32px 28px',\n  border: '1px solid #E5E7EB',\n  borderRadius: '16px',\n  overflow: 'hidden',\n};\n\nexport function MoonPayWidget({\n  config,\n  onUrlSignatureRequested,\n  visible = true,\n  className,\n  style,\n}: MoonPayWidgetProps) {\n  useSdk(config, visible, onUrlSignatureRequested);\n\n  if (visible) {\n    return (\n      <div\n        id={MOONPAY_WIDGET_CONTAINER_ID}\n        className={className}\n        style={\n          config.variant === 'embedded'\n            ? {\n              ...defaultStyles,\n              ...style,\n            }\n            : undefined\n        }\n      />\n    );\n  }\n\n  return null;\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getMoonPayBalanceWithdrawConfigFromProps } from '../helpers';\nimport type { MoonPayBalanceWithdrawProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayBalanceWithdrawWidget(\n  props: MoonPayBalanceWithdrawProps,\n) {\n  const { environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getMoonPayBalanceWithdrawConfigFromProps({\n        props,\n        environment,\n        debug: false,\n      }),\n    [props, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getBuyConfigFromProps } from '../helpers';\nimport type { MoonPayBuyProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayBuyWidget(props: MoonPayBuyProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getBuyConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getConsumerKycConfigFromProps } from '../helpers';\nimport type { MoonPayConsumerKycProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\n/**\n * @deprecated\n */\nexport function MoonPayConsumerKycWidget(props: MoonPayConsumerKycProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getConsumerKycConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getNftConfigFromProps } from '../helpers';\nimport type { MoonPayNftProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayNftCheckoutWidget(props: MoonPayNftProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getNftConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getClaimConfigFromProps } from '../helpers';\nimport type { MoonPayClaimProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayNftClaimWidget(props: MoonPayClaimProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getClaimConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getSellConfigFromProps } from '../helpers';\nimport type { MoonPaySellProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPaySellWidget(props: MoonPaySellProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getSellConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getSwapsCustomerSetupConfigFromProps } from '../helpers';\nimport type { MoonPaySwapsCustomerSetupProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPaySwapsCustomerSetupWidget(\n  props: MoonPaySwapsCustomerSetupProps,\n) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getSwapsCustomerSetupConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getSwapConfigFromProps } from '../helpers';\nimport type { MoonPaySwapProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPaySwapWidget(props: MoonPaySwapProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getSwapConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getTopUpLedgerConfigFromProps } from '../helpers';\nimport type { MoonPayTopUpBalanceLedgerProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayTopUpLedgerWidget(\n  props: MoonPayTopUpBalanceLedgerProps,\n) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getTopUpLedgerConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","import { useContext, useMemo } from 'react';\nimport { getPartnerTopupConfigFromProps } from '../helpers';\nimport type { MoonPayPartnerTopupProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayTopUpWidget(props: MoonPayPartnerTopupProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n  const {\n    visible,\n    className,\n    style,\n    onUrlSignatureRequested,\n    signature,\n  } = props;\n\n  const config = useMemo(\n    () =>\n      getPartnerTopupConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: signature || '',\n      }),\n    [props, apiKey, environment, signature],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      onUrlSignatureRequested={onUrlSignatureRequested}\n      visible={visible}\n      className={className}\n      style={style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getTransactionTrackerConfigFromProps } from '../helpers';\nimport type { MoonPayTransactionTrackerProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayTransactionTrackerWidget(\n  props: MoonPayTransactionTrackerProps,\n) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getTransactionTrackerConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\nimport { useContext, useMemo } from 'react';\nimport { getWithdrawLedgerConfigFromProps } from '../helpers';\nimport type { MoonPayWithdrawLedgerProps } from '../types';\nimport { MoonPayContext } from './MoonPayProvider';\nimport { MoonPayWidget } from './MoonPayWidget';\n\nexport function MoonPayWithdrawLedgerWidget(props: MoonPayWithdrawLedgerProps) {\n  const { apiKey, environment } = useContext(MoonPayContext);\n\n  const config = useMemo(\n    () =>\n      getWithdrawLedgerConfigFromProps({\n        props,\n        apiKey,\n        environment,\n        debug: false,\n        signature: props.signature || '',\n      }),\n    [props, apiKey, environment],\n  );\n\n  return (\n    <MoonPayWidget\n      config={config}\n      visible={props.visible}\n      onUrlSignatureRequested={props.onUrlSignatureRequested}\n      className={props.className}\n      style={props.style}\n    />\n  );\n}\n"],"mappings":"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","names":["useContext","useCallback","useEffect","useState","useRef","useEffect","useState","useState","useCallback","useEffect","useCallback","useEffect","useRef","Logger","useRef","Logger","useCallback","useEffect","jsx","jsx","useContext","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo","useContext","useMemo","jsx","useContext","useMemo"]}
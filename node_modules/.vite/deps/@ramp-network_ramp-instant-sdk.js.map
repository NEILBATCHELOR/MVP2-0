{
  "version": 3,
  "sources": ["../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/body-scroll-lock.ts", "../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/consts.ts", "../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/types.ts", "../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/utils.ts", "../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/init-helpers.ts", "../../.pnpm/@ramp-network+ramp-instant-sdk@6.0.1/node_modules/@ramp-network/ramp-instant-sdk/src/ramp-instant-sdk.ts"],
  "sourcesContent": ["// Track if body scroll is locked\nlet isLocked = false;\nlet originalOverflow: string | null = null;\nlet originalPaddingRight: string | null = null;\nlet originalPosition: string | null = null;\nlet originalTop: string | null = null;\nlet originalLeft: string | null = null;\nlet originalWidth: string | null = null;\nlet originalHeight: string | null = null;\nlet scrollPosition: number | null = null;\n\n/**\n * Check if the device is iOS\n */\nfunction isIOS(): boolean {\n  return (\n    /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n    !(window as Window & { MSStream?: unknown }).MSStream\n  );\n}\n\n/**\n * Disables body scroll while preserving scroll position\n */\nexport function disableBodyScroll(): void {\n  if (!isLocked) {\n    const body = document.body;\n    const scrollbarWidth = window.innerWidth - body.clientWidth;\n\n    // Store original values\n    originalOverflow = body.style.overflow;\n    originalPaddingRight = body.style.paddingRight;\n    originalPosition = body.style.position;\n    originalTop = body.style.top;\n    originalLeft = body.style.left;\n    originalWidth = body.style.width;\n    originalHeight = body.style.height;\n\n    // Store scroll position\n    scrollPosition = window.scrollY;\n\n    // Prevent body scroll\n    body.style.overflow = 'hidden';\n\n    // Prevent layout shift by adding padding for scrollbar\n    if (scrollbarWidth > 0) {\n      body.style.paddingRight = `${scrollbarWidth}px`;\n    }\n\n    // iOS Safari specific handling\n    if (isIOS()) {\n      body.style.position = 'fixed';\n      body.style.top = `-${scrollPosition}px`;\n      body.style.left = '0';\n      body.style.width = '100%';\n      body.style.height = '100%';\n      body.style.touchAction = 'none';\n    }\n\n    isLocked = true;\n  }\n}\n\n/**\n * Re-enables body scroll\n */\nexport function clearAllBodyScrollLocks(): void {\n  if (isLocked) {\n    const body = document.body;\n\n    // Restore original values\n    body.style.overflow = originalOverflow || '';\n    body.style.paddingRight = originalPaddingRight || '';\n    body.style.position = originalPosition || '';\n    body.style.top = originalTop || '';\n    body.style.left = originalLeft || '';\n    body.style.width = originalWidth || '';\n    body.style.height = originalHeight || '';\n    body.style.touchAction = '';\n\n    // Restore scroll position for iOS\n    if (isIOS() && scrollPosition !== null) {\n      window.scrollTo(0, scrollPosition);\n    }\n\n    originalOverflow = null;\n    originalPaddingRight = null;\n    originalPosition = null;\n    originalTop = null;\n    originalLeft = null;\n    originalWidth = null;\n    originalHeight = null;\n    scrollPosition = null;\n    isLocked = false;\n  }\n}\n", "export const baseWidgetUrl = 'https://app.rampnetwork.com/';\n\nexport const SEND_CRYPTO_SUPPORTED_VERSION = 1 as const;\n\n// It will be evaluated by rollup-plugin-version-injector\nexport const SDK_VERSION = '[VI]{version}[/VI]';\n", "import { SEND_CRYPTO_SUPPORTED_VERSION } from './consts';\n\ntype TAsset = string;\ntype TEthAddress = string;\ntype TSwapAmount = string;\ntype THostLogoUrl = string;\ntype THostApiKey = string;\ntype THostAppName = string;\ntype TURL = string;\ntype TDateString = string;\ntype TFiatCurrency = string;\ntype TFiatValue = string;\ntype TAddress = string;\ntype TEmailAddress = string;\ntype TCryptoAmount = string;\ntype TAssetExchangeRate = number;\ntype TFinalTxHash = string;\ntype TActionID = string;\ntype TNewActionStatus = string;\ntype TActionTimestamp = string;\ntype TActionDetails = string;\ntype TWebhookStatusUrl = string;\ntype TFinalUrl = string;\ntype TContainerNode = HTMLElement;\ntype TFlow = 'ONRAMP' | 'OFFRAMP';\n\nexport enum PaymentMethodName {\n  MANUAL_BANK_TRANSFER = 'MANUAL_BANK_TRANSFER',\n  AUTO_BANK_TRANSFER = 'AUTO_BANK_TRANSFER',\n  CARD_PAYMENT = 'CARD_PAYMENT',\n  APPLE_PAY = 'APPLE_PAY',\n}\n\nexport enum PaymentMethodType {\n  SEPA = 'SEPA',\n  CARD = 'CARD',\n  APPLEPAY = 'APPLEPAY',\n  GOOGLEPAY = 'GOOGLEPAY',\n  PISP = 'PISP',\n  SOFORT = 'SOFORT',\n  PIX = 'PIX',\n}\n\nexport enum PurchaseStatus {\n  INITIALIZED = 'INITIALIZED',\n  PAYMENT_STARTED = 'PAYMENT_STARTED',\n  PAYMENT_IN_PROGRESS = 'PAYMENT_IN_PROGRESS',\n  PAYMENT_FAILED = 'PAYMENT_FAILED',\n  PAYMENT_EXECUTED = 'PAYMENT_EXECUTED',\n  FIAT_RECEIVED = 'FIAT_RECEIVED',\n  FIAT_SENT = 'FIAT_SENT',\n  EXPIRED = 'EXPIRED',\n  CANCELLED = 'CANCELLED',\n  RELEASING = 'RELEASING',\n  RELEASED = 'RELEASED',\n}\n\nexport type TPurchaseExternalId = string;\n\nexport interface IHostConfig {\n  swapAsset?: TAsset;\n  offrampAsset?: TAsset;\n  swapAmount?: TSwapAmount;\n  fiatValue?: TFiatValue;\n  fiatCurrency?: TFiatCurrency;\n  userAddress?: TEthAddress;\n  userEmailAddress?: TEmailAddress;\n  hostApiKey?: THostApiKey;\n  hostLogoUrl: THostLogoUrl;\n  hostAppName: THostAppName;\n  url?: TURL;\n  variant?: AllWidgetVariants;\n  webhookStatusUrl?: TWebhookStatusUrl;\n  finalUrl?: TFinalUrl;\n  containerNode?: TContainerNode;\n  selectedCountryCode?: string;\n  defaultAsset?: TAsset;\n  defaultFlow?: TFlow;\n  enabledFlows?: TFlow[];\n  offrampWebhookV3Url?: TWebhookStatusUrl;\n  useSendCryptoCallback?: boolean;\n  paymentMethodType?: PaymentMethodType;\n  hideExitButton?: boolean;\n  closeable?: boolean;\n  credentialless?: boolean;\n}\n\nexport interface IHostConfigWithSdkParams extends Omit<IHostConfig, 'useSendCryptoCallback'> {\n  sdkType: 'WEB';\n  sdkVersion: string;\n  widgetInstanceId: string;\n  variant: AllWidgetVariants;\n  useSendCryptoCallbackVersion?: typeof SEND_CRYPTO_SUPPORTED_VERSION;\n}\n\nexport interface IAssetInfo {\n  address: string | null;\n  symbol: string;\n  type: string;\n  name: string;\n  decimals: number;\n}\n\nexport interface IPurchase {\n  id: TPurchaseExternalId;\n  endTime: TDateString | null;\n  asset: IAssetInfo;\n  receiverAddress: TAddress;\n  cryptoAmount: TCryptoAmount;\n  fiatCurrency: TFiatCurrency;\n  fiatValue: TFiatValue;\n  assetExchangeRate: TAssetExchangeRate;\n  baseRampFee: TFiatValue;\n  networkFee: TFiatValue;\n  appliedFee: TFiatValue;\n  paymentMethodType: PaymentMethodName;\n  finalTxHash?: TFinalTxHash;\n  createdAt: TDateString;\n  updatedAt: TDateString;\n  status: PurchaseStatus;\n}\n\nexport interface AssetInfo {\n  address: string | null;\n  symbol: string;\n  chain: string;\n  type: string;\n  name: string;\n  decimals: number;\n}\n\nexport interface IOfframpSale {\n  id: string;\n  createdAt: string;\n  crypto: {\n    amount: string;\n    assetInfo: AssetInfo;\n  };\n  fiat: {\n    amount: number;\n    currencySymbol: string;\n  };\n}\n\nexport interface IAction {\n  id: TActionID;\n  newStatus: TNewActionStatus;\n  timestamp: TActionTimestamp;\n  details: TActionDetails;\n}\n\nexport enum EventSeverity {\n  VERBOSE = 'VERBOSE',\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n}\n\nexport interface IConfigError {\n  fieldName: string;\n  description: string;\n  exampleValue?: string;\n  severity: EventSeverity;\n}\n\nexport interface IWidgetEvent {\n  type: string;\n  payload: any | null;\n  internal?: boolean;\n}\n\nexport enum WidgetEventTypes {\n  WIDGET_CLOSE = 'WIDGET_CLOSE',\n  WIDGET_CONFIG_DONE = 'WIDGET_CONFIG_DONE',\n  WIDGET_CONFIG_FAILED = 'WIDGET_CONFIG_FAILED',\n  PURCHASE_CREATED = 'PURCHASE_CREATED',\n  OFFRAMP_SALE_CREATED = 'OFFRAMP_SALE_CREATED',\n}\n\nexport enum InternalEventTypes {\n  APP_VERSION = 'APP_VERSION',\n  WIDGET_CLOSE_REQUEST = 'WIDGET_CLOSE_REQUEST',\n  WIDGET_CLOSE_REQUEST_CANCELLED = 'WIDGET_CLOSE_REQUEST_CANCELLED',\n  WIDGET_CLOSE_REQUEST_CONFIRMED = 'WIDGET_CLOSE_REQUEST_CONFIRMED',\n  REQUEST_CRYPTO_ACCOUNT = 'REQUEST_CRYPTO_ACCOUNT',\n  SEND_CRYPTO = 'SEND_CRYPTO',\n}\n\nexport type TAllEventTypes = WidgetEventTypes | InternalEventTypes;\n\nexport interface IWidgetCloseEvent extends IWidgetEvent {\n  type: WidgetEventTypes.WIDGET_CLOSE;\n  payload: null;\n  widgetInstanceId: string;\n  internal?: false;\n}\n\nexport interface IPurchaseCreatedEvent extends IWidgetEvent {\n  type: WidgetEventTypes.PURCHASE_CREATED;\n  payload: {\n    purchase: IPurchase;\n    purchaseViewToken: string;\n    apiUrl: string;\n  };\n  widgetInstanceId: string;\n  internal?: false;\n}\n\nexport interface IOfframpSaleCreatedEvent extends IWidgetEvent {\n  type: WidgetEventTypes.OFFRAMP_SALE_CREATED;\n  payload: {\n    sale: IOfframpSale;\n    saleViewToken: string;\n    apiUrl: string;\n  };\n  widgetInstanceId: string;\n  internal?: false;\n}\n\nexport interface IWidgetConfigDoneEvent extends IWidgetEvent {\n  type: WidgetEventTypes.WIDGET_CONFIG_DONE;\n  payload: null;\n  widgetInstanceId: string;\n  internal?: false;\n}\n\nexport interface IWidgetConfigFailedEvent extends IWidgetEvent {\n  type: WidgetEventTypes.WIDGET_CONFIG_FAILED;\n  payload: null;\n  widgetInstanceId: string;\n  internal?: false;\n}\n\nexport interface IWidgetCloseRequestEvent extends IWidgetEvent {\n  type: InternalEventTypes.WIDGET_CLOSE_REQUEST;\n  payload: null;\n  widgetInstanceId?: string;\n  internal: boolean;\n}\n\nexport interface IRequestCryptoAccountEvent extends IWidgetEvent {\n  type: InternalEventTypes.REQUEST_CRYPTO_ACCOUNT;\n  payload: {\n    type: string;\n    assetSymbol: string;\n  };\n  widgetInstanceId?: string;\n}\n\nexport interface ISendCryptoEvent extends IWidgetEvent {\n  eventVersion: typeof SEND_CRYPTO_SUPPORTED_VERSION;\n  type: InternalEventTypes.SEND_CRYPTO;\n  payload: {\n    assetInfo: AssetInfo;\n    amount: string;\n    address: string;\n  };\n  widgetInstanceId?: string;\n}\n\nexport interface IWidgetCloseRequestCancelledEvent extends IWidgetEvent {\n  type: InternalEventTypes.WIDGET_CLOSE_REQUEST_CANCELLED;\n  payload: null;\n  internal: true;\n}\n\nexport interface IWidgetCloseRequestConfirmedEvent extends IWidgetEvent {\n  type: InternalEventTypes.WIDGET_CLOSE_REQUEST_CONFIRMED;\n  payload: null;\n  internal: true;\n}\n\nexport interface IAppVersionEvent extends IWidgetEvent {\n  type: InternalEventTypes.APP_VERSION;\n  payload: {\n    version: `${number}.${number}`;\n  };\n  widgetInstanceId: string;\n  internal: true;\n}\n\nexport type TWidgetEvents =\n  | IWidgetCloseEvent\n  | IWidgetConfigDoneEvent\n  | IWidgetConfigFailedEvent\n  | IPurchaseCreatedEvent\n  | IOfframpSaleCreatedEvent;\n\nexport type TInternalEvents =\n  | IWidgetCloseRequestEvent\n  | IWidgetCloseRequestCancelledEvent\n  | IWidgetCloseRequestConfirmedEvent\n  | IRequestCryptoAccountEvent\n  | ISendCryptoEvent\n  | IAppVersionEvent;\n\nexport enum InternalSdkEventTypes {\n  REQUEST_CRYPTO_ACCOUNT_RESULT = 'REQUEST_CRYPTO_ACCOUNT_RESULT',\n  SEND_CRYPTO_RESULT = 'SEND_CRYPTO_RESULT',\n}\n\nexport interface IRequestCryptoAccountResultEvent extends IWidgetEvent {\n  type: InternalSdkEventTypes.REQUEST_CRYPTO_ACCOUNT_RESULT;\n  payload:\n    | IOnRequestCryptoAccountResult\n    | {\n        error: string | undefined;\n      };\n  widgetInstanceId?: string;\n}\n\nexport interface ISendCryptoResultEvent extends IWidgetEvent {\n  eventVersion: typeof SEND_CRYPTO_SUPPORTED_VERSION;\n  type: InternalSdkEventTypes.SEND_CRYPTO_RESULT;\n  payload:\n    | IOnSendCryptoResult\n    | {\n        error: string | undefined;\n      };\n  widgetInstanceId?: string;\n}\n\nexport type TSdkEvents = IRequestCryptoAccountResultEvent | ISendCryptoResultEvent;\n\nexport type TAllEvents = TWidgetEvents | TInternalEvents;\n\nexport type WidgetVariantTypes =\n  | 'desktop'\n  | 'mobile'\n  | 'hosted-desktop'\n  | 'hosted-mobile'\n  | 'webview-desktop'\n  | 'webview-mobile';\n\nexport type SyntheticWidgetVariants =\n  | 'hosted-auto'\n  | 'auto'\n  | 'embedded-desktop'\n  | 'embedded-mobile';\n\nexport type AllWidgetVariants = WidgetVariantTypes | SyntheticWidgetVariants;\n\nexport type TUnsubscribeToken = string;\n\nexport type TEventListenerDict = {\n  [EventType in TAllEvents['type']]: IEventListener[];\n};\n\nexport interface IEventListener {\n  internal: boolean;\n  callback(evt: TAllEvents): any;\n}\n\nexport interface IOnRequestCryptoAccountResult {\n  address: string;\n  type?: string;\n  name?: string;\n  assetSymbol?: string;\n}\n\nexport interface IOnSendCryptoResult {\n  txHash: string;\n}\n\nexport type TOnRequestCryptoAccountCallback = (\n  type: string,\n  assetSymbol: string\n) => Promise<IOnRequestCryptoAccountResult>;\n\nexport type TOnSendCryptoCallback = (\n  assetInfo: AssetInfo,\n  amount: string,\n  address: string\n) => Promise<IOnSendCryptoResult>;\n", "import {\n  AllWidgetVariants,\n  EventSeverity,\n  IConfigError,\n  IHostConfig,\n  InternalEventTypes,\n  SyntheticWidgetVariants,\n  TAllEventTypes,\n  TEventListenerDict,\n  WidgetEventTypes,\n} from './types';\n\nexport function getRandomIntString(): string {\n  try {\n    return String(crypto.getRandomValues(new Uint32Array(1))[0]);\n  } catch {\n    // if `crypto` is not supported, fall back to Math.random\n    // tslint:disable-next-line:no-magic-numbers\n    return String(Math.floor(Math.random() * 10000000));\n  }\n}\n\nexport const widgetDesktopWidth = 895;\nexport const widgetDesktopHeight = 590;\n\nexport const minWidgetMobileWidth = 320;\nexport const minWidgetMobileHeight = 667;\n\nexport function normalizeConfigAndLogErrorsOnInvalidFields(\n  config: Partial<IHostConfig>\n): IHostConfig {\n  const errors: IConfigError[] = [];\n  const configCopy = { ...config };\n\n  if (\n    ![\n      'desktop',\n      'mobile',\n      'hosted-desktop',\n      'hosted-mobile',\n      'hosted-auto',\n      'auto',\n      'embedded-desktop',\n      'embedded-mobile',\n    ].includes(config.variant!)\n  ) {\n    configCopy.variant = 'desktop';\n\n    errors.push({\n      fieldName: 'variant',\n      description: 'Invalid value for `variant` config field ',\n      exampleValue: `'desktop'`,\n      severity: EventSeverity.WARNING,\n    });\n  }\n\n  if (config.variant === 'embedded-desktop' || config.variant === 'embedded-mobile') {\n    validateContainerNode(config.containerNode, config.variant);\n  }\n\n  if (!['embedded-desktop', 'embedded-mobile'].includes(configCopy.variant!)) {\n    delete configCopy.containerNode;\n  }\n\n  if (typeof config.useSendCryptoCallback !== 'undefined') {\n    delete config.useSendCryptoCallback;\n  }\n\n  if (config.credentialless === undefined) {\n    configCopy.credentialless = false;\n  }\n\n  logErrors(errors);\n\n  return configCopy as IHostConfig;\n}\n\nfunction logErrors(errors: IConfigError[]): void {\n  if (!errors.length) {\n    return;\n  }\n\n  // tslint:disable:no-console\n  console.group('Config errors');\n\n  errors.forEach((error) => {\n    console.group(error.fieldName);\n\n    console.log(error.description);\n    console.log(`Example expected value: ${error.exampleValue}`);\n    console.log(`Severity: ${error.severity}`);\n\n    console.groupEnd();\n  });\n\n  console.groupEnd();\n  // tslint:enable:no-console\n}\n\nexport function initEventListenersDict(): TEventListenerDict {\n  const widgetEventTypes = Array.from(Object.values(WidgetEventTypes));\n  const internalEventTypes = Array.from(Object.values(InternalEventTypes));\n\n  return [...widgetEventTypes, ...internalEventTypes].reduce<TEventListenerDict>(\n    (listenersDict: TEventListenerDict, eventType: TAllEventTypes) => {\n      listenersDict[eventType] = [];\n\n      return listenersDict;\n    },\n    {} as any\n  ) as TEventListenerDict;\n}\n\nexport function determineWidgetVariant(config: IHostConfig): AllWidgetVariants {\n  const mediaQuery = '(min-width: 920px) and (min-height: 630px)';\n  const variant = config.variant?.toLocaleLowerCase();\n\n  if (\n    variant === 'mobile' ||\n    variant === 'desktop' ||\n    variant === 'hosted-mobile' ||\n    variant === 'hosted-desktop' ||\n    variant === 'embedded-desktop' ||\n    variant === 'embedded-mobile'\n  ) {\n    return variant;\n  }\n\n  const isDesktop = window.matchMedia(mediaQuery).matches;\n\n  if (variant === 'hosted-auto') {\n    return isDesktop ? 'hosted-desktop' : 'hosted-mobile';\n  }\n\n  return isDesktop ? 'desktop' : 'mobile';\n}\n\nexport function isHtmlElement(element: Element): element is HTMLElement {\n  return typeof (element as any).blur === 'function';\n}\n\nfunction validateContainerNode(\n  containerNode: HTMLElement | undefined,\n  _variant: SyntheticWidgetVariants\n): void {\n  if (!document.body) {\n    throw new Error(\"Couldn't find <body> element.\");\n  }\n\n  if (!(containerNode instanceof HTMLElement)) {\n    throw new Error('Container node has to be a proper HTML element.');\n  }\n\n  if (!document.body.contains(containerNode)) {\n    throw new Error('Container node must be attached to the document.');\n  }\n}\n\n/**\n * Concatenates `base` with `path`, always treating `path` as a relative path. Ignores:\n *   - trailing slash in `base`\n *   - leading slash in `path`\n * @param base base URL, e.g.: 'http://example.com/api' or 'http://example.com/service/api/'\n * @param path path to append, e.g.: 'user/getByEmail' or '/swap'\n */\nexport function concatRelativePath(base: string | URL, path: string): URL {\n  const normalizedBase = urlWithoutTrailingSlash(base instanceof URL ? base.href : base);\n  const normalizedPath = path.startsWith('/') ? path.substr(1) : path;\n  return new URL(`${normalizedBase}/${normalizedPath}`);\n}\n\nexport function urlWithoutTrailingSlash(url: string): string {\n  return url.endsWith('/') ? url.slice(0, -1) : url;\n}\n", "import { baseWidgetUrl } from './consts';\nimport {\n  AllWidgetVariants,\n  IHostConfigWithSdkParams,\n  InternalEventTypes,\n  TAllEvents,\n} from './types';\nimport {\n  minWidgetMobileHeight,\n  minWidgetMobileWidth,\n  widgetDesktopHeight,\n  widgetDesktopWidth,\n} from './utils';\n\nexport function getBaseUrl(config: IHostConfigWithSdkParams): URL {\n  return new URL(config.url || baseWidgetUrl);\n}\n\nexport function initWidgetIframeUrl(config: IHostConfigWithSdkParams): string {\n  const baseUrl = getBaseUrl(config);\n  const hostUrl = window.location.origin;\n\n  const { containerNode, url, ...configWithoutIframeUrl } = config;\n\n  const preparedConfig = { ...configWithoutIframeUrl, hostUrl };\n\n  Object.entries(preparedConfig).forEach(([key, value]) => {\n    if (value) {\n      baseUrl.searchParams.append(key, Array.isArray(value) ? value.join(',') : value.toString());\n    }\n  });\n\n  return baseUrl.toString();\n}\n\nexport function initDOMNodeWithOverlay(\n  url: string,\n  dispatch: (event: TAllEvents) => void,\n  config: IHostConfigWithSdkParams\n): {\n  body: HTMLBodyElement | null;\n  iframe: HTMLIFrameElement;\n  overlay: HTMLDivElement;\n  shadow: ShadowRoot;\n  shadowHost: HTMLDivElement;\n} {\n  const body = document.querySelector('body');\n\n  const shadowHost = document.createElement('div');\n\n  shadowHost.style.width = '100%';\n  shadowHost.style.height = '100%';\n\n  const shadow = shadowHost.attachShadow({ mode: 'open' });\n\n  shadow.appendChild(getStylesForShadowDom(config.variant));\n\n  const iframe = prepareIframeNode(url, config.variant, undefined, config.credentialless);\n  const overlay = prepareOverlayNode(iframe, dispatch);\n\n  overlay.appendChild(iframe);\n  shadow.appendChild(overlay);\n\n  return {\n    body,\n    iframe,\n    overlay,\n    shadow,\n    shadowHost,\n  };\n}\n\nexport function initDOMNodeWithoutOverlay(\n  url: string,\n  _dispatch: (event: TAllEvents) => void,\n  config: IHostConfigWithSdkParams\n): {\n  body: HTMLBodyElement | null;\n  iframe: HTMLIFrameElement;\n  overlay: null;\n  shadow: ShadowRoot;\n  shadowHost: HTMLDivElement;\n  container: HTMLDivElement;\n} {\n  const body = document.querySelector('body');\n\n  const shadowHost = document.createElement('div');\n\n  shadowHost.style.width = '100%';\n  shadowHost.style.height = '100%';\n\n  const shadow = shadowHost.attachShadow({ mode: 'open' });\n\n  const container = document.createElement('div');\n  container.classList.add('embedded-container');\n  container.classList.add('constrained');\n\n  shadow.appendChild(container);\n\n  const loader = document.createElement('div');\n  loader.classList.add('loader-container');\n\n  // tslint:disable:max-line-length\n  loader.innerHTML = `\n    <svg width=\"92\" height=\"60\" viewBox=\"0 0 51 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"loader\">\n      <path d=\"M16.2232 18.8309L22.282 24.912C22.7953 25.4272 22.7948 26.2647 22.281 26.7792L17.651 31.4158C16.8619 32.1947 15.5719 32.1947 14.7828 31.4158L0.591812 17.4093C-0.197271 16.6305 -0.197271 15.3571 0.591812 14.5783L14.7828 0.584122C15.5719 -0.194707 16.8619 -0.194707 17.651 0.584122L22.281 5.22078C22.7948 5.73535 22.7953 6.57281 22.282 7.08795L16.2232 13.1691C14.645 14.7267 14.645 17.2733 16.2232 18.8309Z\" fill=\"#21BF73\"></path>\n      <path d=\"M34.4433 18.8309L28.3845 24.912C27.8712 25.4272 27.8717 26.2647 28.3855 26.7792L33.0155 31.4158C33.8046 32.1947 35.0946 32.1947 35.8837 31.4158L50.0747 17.4093C50.8638 16.6305 50.8638 15.3571 50.0747 14.5783L35.8837 0.584122C35.0946 -0.194707 33.8046 -0.194707 33.0155 0.584122L28.3855 5.22078C27.8717 5.73535 27.8712 6.57281 28.3845 7.08795L34.4433 13.1691C36.0215 14.7267 36.0215 17.2733 34.4433 18.8309Z\" fill=\"#0A6E5C\"></path>\n      <path d=\"M17.8128 17.157C17.1737 16.518 17.1737 15.482 17.8128 14.843L24.1765 8.47926C24.8155 7.84025 25.8515 7.84025 26.4905 8.47926L32.8542 14.843C33.4932 15.482 33.4932 16.518 32.8542 17.157L26.4905 23.5207C25.8515 24.1598 24.8155 24.1598 24.1765 23.5207L17.8128 17.157Z\" fill=\"#21BF73\"></path>\n    </svg>`;\n  // tslint:enable:max-line-length\n\n  container.appendChild(loader);\n\n  shadow.appendChild(getStylesForShadowDom(config.variant));\n\n  const iframe = prepareIframeNode(url, config.variant, config.containerNode);\n\n  container.appendChild(iframe);\n\n  return {\n    body,\n    iframe,\n    overlay: null,\n    shadow,\n    shadowHost,\n    container,\n  };\n}\n\nexport function importFonts(): void {\n  if (document.querySelector('[data-ramp-font]')) {\n    return;\n  }\n\n  const font = document.createElement('link');\n\n  font.setAttribute(\n    'href',\n    'https://fonts.googleapis.com/css?family=Poppins:200,400,500,600,700&display=swap&subset=latin-ext'\n  );\n  font.setAttribute('rel', 'stylesheet');\n  font.setAttribute('data-ramp-font', '');\n\n  document.head.appendChild(font);\n}\n\nfunction prepareIframeNode(\n  url: string,\n  variant: AllWidgetVariants,\n  containerNode?: HTMLElement,\n  credentialless?: boolean\n): HTMLIFrameElement {\n  const iframe = document.createElement('iframe');\n\n  iframe.setAttribute('src', url);\n\n  if (credentialless) {\n    iframe.setAttribute('credentialless', 'credentialless');\n  }\n\n  if (containerNode) {\n    iframe.setAttribute(\n      'width',\n      variant === 'desktop' || variant === 'embedded-desktop'\n        ? widgetDesktopWidth.toString()\n        : containerNode.getBoundingClientRect().width.toString()\n    );\n\n    iframe.setAttribute(\n      'height',\n      variant === 'desktop' || variant === 'embedded-desktop'\n        ? widgetDesktopHeight.toString()\n        : containerNode.getBoundingClientRect().height.toString()\n    );\n  } else {\n    iframe.setAttribute(\n      'width',\n      variant === 'desktop' || variant === 'embedded-desktop'\n        ? widgetDesktopWidth.toString()\n        : window.innerWidth.toString()\n    );\n\n    iframe.setAttribute(\n      'height',\n      variant === 'desktop' || variant === 'embedded-desktop'\n        ? widgetDesktopHeight.toString()\n        : window.innerHeight.toString()\n    );\n  }\n\n  iframe.setAttribute('allow', 'payment; microphone; camera; clipboard-read; clipboard-write');\n\n  iframe.classList.add('iframe');\n\n  return iframe;\n}\n\nexport function makeIframeResponsive(\n  iframe: HTMLIFrameElement,\n  container?: HTMLDivElement,\n  containerNode?: HTMLElement\n) {\n  if (container?.classList.contains('constrained')) {\n    container.classList.remove('constrained');\n  }\n\n  const updateIframeSize = () => {\n    if (containerNode) {\n      iframe.setAttribute('width', containerNode.getBoundingClientRect().width.toString());\n      iframe.setAttribute('height', containerNode.getBoundingClientRect().height.toString());\n    } else {\n      iframe.setAttribute('width', window.innerWidth.toString());\n      iframe.setAttribute('height', window.innerHeight.toString());\n    }\n  };\n\n  updateIframeSize();\n\n  // Create a ResizeObserver to watch for size changes\n  const resizeObserver = new ResizeObserver(() => {\n    updateIframeSize();\n  });\n\n  // Observe either the containerNode or document body for size changes\n  if (containerNode) {\n    resizeObserver.observe(containerNode);\n  } else {\n    resizeObserver.observe(document.body);\n  }\n\n  // Clean up the observer when the iframe is removed\n  const parentNode = iframe.parentNode;\n  if (parentNode) {\n    const mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (Array.from(mutation.removedNodes).includes(iframe)) {\n          resizeObserver.disconnect();\n          mutationObserver.disconnect();\n        }\n      });\n    });\n    mutationObserver.observe(parentNode, { childList: true });\n  }\n\n  return iframe;\n}\n\nfunction prepareOverlayNode(\n  iframe: HTMLIFrameElement,\n  dispatch: (event: TAllEvents) => void\n): HTMLDivElement {\n  const overlay = document.createElement('div');\n\n  overlay.classList.add('overlay');\n\n  const loader = document.createElement('div');\n  loader.classList.add('loader-container');\n\n  // tslint:disable:max-line-length\n  loader.innerHTML = `\n    <svg width=\"92\" height=\"60\" viewBox=\"0 0 51 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"loader\">\n      <path d=\"M16.2232 18.8309L22.282 24.912C22.7953 25.4272 22.7948 26.2647 22.281 26.7792L17.651 31.4158C16.8619 32.1947 15.5719 32.1947 14.7828 31.4158L0.591812 17.4093C-0.197271 16.6305 -0.197271 15.3571 0.591812 14.5783L14.7828 0.584122C15.5719 -0.194707 16.8619 -0.194707 17.651 0.584122L22.281 5.22078C22.7948 5.73535 22.7953 6.57281 22.282 7.08795L16.2232 13.1691C14.645 14.7267 14.645 17.2733 16.2232 18.8309Z\" fill=\"#21BF73\"></path>\n      <path d=\"M34.4433 18.8309L28.3845 24.912C27.8712 25.4272 27.8717 26.2647 28.3855 26.7792L33.0155 31.4158C33.8046 32.1947 35.0946 32.1947 35.8837 31.4158L50.0747 17.4093C50.8638 16.6305 50.8638 15.3571 50.0747 14.5783L35.8837 0.584122C35.0946 -0.194707 33.8046 -0.194707 33.0155 0.584122L28.3855 5.22078C27.8717 5.73535 27.8712 6.57281 28.3845 7.08795L34.4433 13.1691C36.0215 14.7267 36.0215 17.2733 34.4433 18.8309Z\" fill=\"#0A6E5C\"></path>\n      <path d=\"M17.8128 17.157C17.1737 16.518 17.1737 15.482 17.8128 14.843L24.1765 8.47926C24.8155 7.84025 25.8515 7.84025 26.4905 8.47926L32.8542 14.843C33.4932 15.482 33.4932 16.518 32.8542 17.157L26.4905 23.5207C25.8515 24.1598 24.8155 24.1598 24.1765 23.5207L17.8128 17.157Z\" fill=\"#21BF73\"></path>\n    </svg>`;\n  // tslint:enable:max-line-length\n\n  overlay.appendChild(loader);\n\n  overlay.addEventListener('click', (event) => {\n    if (event.target !== iframe && !overlay.querySelectorAll('.close-modal').length) {\n      dispatch({\n        type: InternalEventTypes.WIDGET_CLOSE_REQUEST,\n        payload: null,\n        internal: true,\n      });\n    }\n  });\n\n  return overlay;\n}\n\nexport function areUrlsEqual(url0: string, url1: string): boolean {\n  return new URL(url0).toString() === new URL(url1).toString();\n}\n\nexport function isCloseModalAlreadyOpen(containerNode: HTMLElement): boolean {\n  return containerNode.querySelectorAll('.close-modal').length !== 0;\n}\n\nexport function prepareCloseModalNode(dispatch: (event: TAllEvents) => void): HTMLDivElement {\n  const container = document.createElement('div');\n  container.classList.add('close-modal');\n\n  const textEl = document.createElement('div');\n  textEl.classList.add('close-modal__text');\n  textEl.textContent = 'Are you sure you want to exit Ramp Network and abandon the transaction?';\n\n  const buttonContainer = document.createElement('div');\n  buttonContainer.classList.add('close-modal__button-container');\n\n  const cancelButton = document.createElement('button');\n  cancelButton.setAttribute('type', 'button');\n  cancelButton.classList.add('close-modal__button');\n  cancelButton.classList.add('close-modal__button--cancel');\n  cancelButton.textContent = 'Cancel';\n  cancelButton.addEventListener('click', (event) => {\n    event.stopPropagation();\n\n    dispatch({\n      type: InternalEventTypes.WIDGET_CLOSE_REQUEST_CANCELLED,\n      payload: null,\n      internal: true,\n    });\n  });\n\n  const exitButton = document.createElement('button');\n  exitButton.setAttribute('type', 'button');\n  exitButton.classList.add('close-modal__button');\n  exitButton.classList.add('close-modal__button--exit');\n  exitButton.textContent = 'Exit';\n  exitButton.addEventListener('click', (event) => {\n    event.stopPropagation();\n\n    dispatch({\n      type: InternalEventTypes.WIDGET_CLOSE_REQUEST_CONFIRMED,\n      payload: null,\n      internal: true,\n    });\n  });\n\n  buttonContainer.appendChild(cancelButton);\n  buttonContainer.appendChild(exitButton);\n\n  container.appendChild(textEl);\n  container.appendChild(buttonContainer);\n\n  return container;\n}\n\nfunction getStylesForShadowDom(variant: AllWidgetVariants): HTMLStyleElement {\n  const styles = document.createElement('style');\n\n  const isMobile =\n    variant === 'mobile' ||\n    variant === 'hosted-mobile' ||\n    variant === 'embedded-mobile' ||\n    variant === 'webview-mobile';\n  const isEmbedded = variant === 'embedded-mobile' || variant === 'embedded-desktop';\n\n  styles.textContent = `\n    .overlay {\n      position: fixed;\n      z-index: 1000;\n      width: 100vw;\n      height: ${isMobile ? '100%;' : '100vh;'}\n      top: 0;\n      left: 0;\n      overflow: hidden;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      ${isMobile ? 'align-items: flex-start;' : 'align-items: center;'}\n    }\n\n    .embedded-container {\n      z-index: 1000;\n      position: relative;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      ${isMobile ? 'align-items: flex-start;' : 'align-items: center;'}\n    }\n\n    .embedded-container.constrained {\n      min-width: ${isMobile ? minWidgetMobileWidth : widgetDesktopWidth}px;\n      min-height: ${isMobile ? minWidgetMobileHeight : widgetDesktopHeight}px;\n    }\n\n    .loader-container {\n      align-self: center;\n    }\n\n    .loader {\n      transform-origin: center;\n      animation: logoAnimation 4s linear infinite;\n      width: 100px;\n      height: auto;\n      align-self: center;\n    }\n\n    .loader path:nth-child(3) {\n      transform-origin: center;\n      position: relative;\n    }\n\n    .loader path:nth-child(1) {\n      transform-origin: center;\n      position: relative;\n      animation: box1Animation 4s linear infinite;\n      transform: scale(0.4) translateX(6px);\n    }\n\n    .loader path:nth-child(2) {\n      transform-origin: center;\n      position: relative;\n      animation: box4Animation 4s linear infinite;\n      transform: scale(0.4) translateX(-6px);\n    }\n\n    @keyframes logoAnimation {\n      10% {\n        transform: rotate(180deg);\n      }\n      30%{\n        transform: rotate(360deg);\n      }\n      70% {\n        transform: rotate(360deg);\n      }\n      90% {\n        transform: rotate(520deg);\n      }\n      100% {\n        transform: rotate(720deg);\n      }\n    }\n\n    @keyframes box1Animation {\n      0%, 10% {\n        transform: scale(0.4) translateX(6px);\n      }\n      30%, 70% {\n        transform: scale(1) translateX(0);\n      }\n      90% {\n        transform: scale(0.4) translateX(6px);\n      }\n    }\n\n\n    @keyframes box4Animation {\n      0%, 10% {\n        transform: scale(0.4) translateX(-6px);\n      }\n      30%, 70% {\n        transform: scale(1) translateX(0);\n      }\n      90% {\n        transform: scale(0.4) translateX(-6px);\n      }\n    }\n\n    .iframe {\n      border: none;\n      user-select: none;\n      visibility: hidden;\n      position: absolute;\n      color-scheme: only light;\n    }\n\n    .iframe.visible {\n      visibility: visible;\n      ${\n        !isEmbedded && isMobile\n          ? `\n        width: 100vw;\n        height: 100%;\n      `\n          : ''\n      }\n    }\n\n    .close-modal {\n      font-family: 'Poppins', sans-serif;\n      width: 678px;\n      height: 276px;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      z-index: 9999;\n      box-shadow: 0px 54px 200px rgba(36, 37, 57, 0.2);\n      display: flex;\n      flex-flow: column nowrap;\n      justify-content: flex-start;\n      align-items: center;\n      padding: 35px;\n      border-radius: 8px;\n      background: #fff;\n\n      box-sizing: border-box;\n    }\n\n    .close-modal * {\n      box-sizing: border-box;\n    }\n\n    .close-modal__text {\n      margin: 40px auto 30px;\n      font-weight: 600;\n      font-size: 24px;\n      line-height: 36px;\n      text-align: center;\n\n      color: #242539;\n    }\n\n    .close-modal__button-container {\n      width: 318px;\n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .close-modal__button {\n      background: #fff;\n      border: 2px solid #EDEEF3;\n      border-radius: 74px;\n      width: 152px;\n      height: 56px;\n      cursor: pointer;\n      font-weight: 600;\n      font-size: 14px;\n      line-height: 21px;\n      color: #2B2D56;\n      text-transform: uppercase;\n    }\n\n    .close-modal__button--exit {\n      background: #DD3E56;\n      box-shadow: 0px 8px 34px rgba(221, 62, 86, 0.4);\n      color: #fff;\n      border-color: transparent;\n    }\n\n    @supports (width: 100dvw) {\n      .overlay {\n        width: 100dvw;\n      }\n\n      .iframe.visible {\n        ${\n          !isEmbedded && isMobile\n            ? `\n          width: 100dvw;\n          height: 100%;\n        `\n            : ''\n        }\n      }\n    }\n\n    @supports (height: 100dvh) {\n      .overlay {\n        height: ${isMobile ? '100%;' : '100dvh;'}\n      }\n    }\n  `;\n\n  return styles;\n}\n", "import { clearAllBodyScrollLocks, disableBodyScroll } from './body-scroll-lock';\nimport { getBaseUrl, makeIframeResponsive } from './init-helpers';\nimport { SDK_VERSION, SEND_CRYPTO_SUPPORTED_VERSION } from './consts';\n\nimport {\n  areUrlsEqual,\n  importFonts,\n  initDOMNodeWithoutOverlay,\n  initDOMNodeWithOverlay,\n  initWidgetIframeUrl,\n  isCloseModalAlreadyOpen,\n  prepareCloseModalNode,\n} from './init-helpers';\n\nimport {\n  IHostConfig,\n  IHostConfigWithSdkParams,\n  InternalEventTypes,\n  InternalSdkEventTypes,\n  IRequestCryptoAccountEvent,\n  TAllEvents,\n  TAllEventTypes,\n  TEventListenerDict,\n  TOnRequestCryptoAccountCallback,\n  IOnRequestCryptoAccountResult,\n  TSdkEvents,\n  TWidgetEvents,\n  WidgetEventTypes,\n  TOnSendCryptoCallback,\n  ISendCryptoEvent,\n  IOnSendCryptoResult,\n  IAppVersionEvent,\n} from './types';\n\nimport {\n  determineWidgetVariant,\n  getRandomIntString,\n  initEventListenersDict,\n  isHtmlElement,\n  normalizeConfigAndLogErrorsOnInvalidFields,\n} from './utils';\n\nexport {\n  type IWidgetCloseEvent as WidgetCloseEvent,\n  type IWidgetCloseRequestCancelledEvent as WidgetCloseRequestCancelledEvent,\n  type IWidgetCloseRequestConfirmedEvent as WidgetCloseRequestConfirmedEvent,\n  type IWidgetCloseRequestEvent as WidgetCloseRequestEvent,\n  type IWidgetConfigDoneEvent as WidgetConfigDoneEvent,\n  type IWidgetEvent as RampInstantEvent,\n  type TWidgetEvents as RampInstantEvents,\n  WidgetEventTypes as RampInstantEventTypes,\n  type AllWidgetVariants as RampInstantWidgetVariantTypes,\n  type IPurchase as RampInstantPurchase,\n} from './types';\n\nexport class RampInstantSDK {\n  public widgetWindow?: Window;\n  public domNodes?: {\n    body: HTMLBodyElement | null;\n    iframe: HTMLIFrameElement;\n    overlay: HTMLDivElement | null;\n    shadowHost: HTMLDivElement;\n    shadow: ShadowRoot;\n    container?: HTMLDivElement;\n  };\n\n  private _config: IHostConfigWithSdkParams;\n  private _rawNormalizedConfig: IHostConfig;\n  private _listeners: TEventListenerDict = initEventListenersDict();\n  private _isVisible: boolean = false;\n  private _onSendCryptoCallback: TOnSendCryptoCallback | undefined = undefined;\n\n  constructor(config: IHostConfig) {\n    importFonts();\n\n    this.unsubscribe = this.unsubscribe.bind(this);\n    this.on = this.on.bind(this);\n    this.show = this.show.bind(this);\n    this._handleEscapeClick = this._handleEscapeClick.bind(this);\n    this._dispatchEvent = this._dispatchEvent.bind(this);\n    this._subscribeToWidgetEvents = this._subscribeToWidgetEvents.bind(this);\n    this._on = this._on.bind(this);\n    this._registerSdkEventHandlers = this._registerSdkEventHandlers.bind(this);\n    this._subscribeToWidgetEvents = this._subscribeToWidgetEvents.bind(this);\n    this._onSendCrypto = this._onSendCrypto.bind(this);\n\n    this._rawNormalizedConfig = normalizeConfigAndLogErrorsOnInvalidFields({\n      variant: 'desktop',\n      ...config,\n    });\n\n    this._config = {\n      ...this._rawNormalizedConfig,\n      ...this._getHostConfigSdkParams(this._rawNormalizedConfig, config.useSendCryptoCallback),\n    };\n  }\n\n  public show(): RampInstantSDK {\n    if (this._isVisible) {\n      throw new Error('Widget is already visible - you can only call this once per instance');\n    }\n\n    if (document.activeElement && isHtmlElement(document.activeElement)) {\n      document.activeElement.blur();\n    }\n\n    this._registerSdkEventHandlers();\n\n    window.addEventListener('message', this._subscribeToWidgetEvents);\n\n    if (this._isConfiguredAsHosted()) {\n      this._showUsingHostedMode();\n    } else if (this._isConfiguredAsEmbedded()) {\n      this._showUsingEmbeddedMode();\n    } else if (this._isConfiguredWithOverlay()) {\n      this._showUsingOverlayMode();\n    }\n\n    window.addEventListener('keydown', this._handleEscapeClick, true);\n\n    return this;\n  }\n\n  public on<T extends TAllEvents>(\n    type: T['type'] | '*',\n    callback: (event: T) => any\n  ): RampInstantSDK {\n    this._on(type, callback, false);\n\n    return this;\n  }\n\n  public unsubscribe(\n    type: TAllEvents['type'] | '*',\n    callback: (event: TAllEvents) => any\n  ): RampInstantSDK {\n    if (type === '*') {\n      const allTypes = Object.entries(this._listeners);\n\n      allTypes.forEach(([key, eventHandlers]) => {\n        const filteredHandlers = eventHandlers.filter((l) => l.callback !== callback);\n        this._listeners[key as TAllEventTypes] = filteredHandlers;\n      });\n    } else {\n      this._listeners[type] = this._listeners[type]?.filter((l) => l.callback !== callback);\n    }\n\n    return this;\n  }\n\n  public _on<T extends TAllEvents>(\n    type: T['type'] | '*',\n    callback: (event: T) => any,\n    internal: boolean\n  ): void {\n    if (type !== '*' && !this._listeners[type]) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        `Unknown / unsupported event name - '${type}'. This listener will have no effect.`\n      );\n    }\n\n    if (type === '*') {\n      const allTypes = Object.values(this._listeners);\n      allTypes.forEach((eventHandlers) => eventHandlers.push({ callback, internal }));\n    } else {\n      this._listeners[type]?.push({ callback, internal });\n    }\n  }\n\n  public close(): RampInstantSDK {\n    this._dispatchEvent({\n      type: WidgetEventTypes.WIDGET_CLOSE,\n      payload: null,\n      widgetInstanceId: this._config.widgetInstanceId,\n    });\n\n    return this;\n  }\n\n  public onSendCrypto(callback: TOnSendCryptoCallback): RampInstantSDK {\n    this._onSendCryptoCallback = callback;\n    return this;\n  }\n\n  public onRequestCryptoAccount(callback: TOnRequestCryptoAccountCallback): RampInstantSDK {\n    const onRequestCryptoAccount = async (event: IRequestCryptoAccountEvent) => {\n      let result: IOnRequestCryptoAccountResult;\n      try {\n        result = await callback(event.payload.type, event.payload.assetSymbol);\n        if (!result.address) {\n          throw new Error('Missing address in the callback result');\n        }\n      } catch (e) {\n        let errorMessage: string | undefined;\n        if (typeof e === 'string') {\n          errorMessage = e;\n        } else if (e instanceof Error) {\n          errorMessage = e.message;\n        }\n        this._sendEventToWidget({\n          type: InternalSdkEventTypes.REQUEST_CRYPTO_ACCOUNT_RESULT,\n          payload: {\n            error: errorMessage,\n          },\n        });\n        return;\n      }\n\n      this._sendEventToWidget({\n        type: InternalSdkEventTypes.REQUEST_CRYPTO_ACCOUNT_RESULT,\n        payload: {\n          address: result.address,\n          type: result.type,\n          name: result.name,\n          assetSymbol: result.assetSymbol,\n        },\n      });\n    };\n\n    this._on(InternalEventTypes.REQUEST_CRYPTO_ACCOUNT, onRequestCryptoAccount, true);\n\n    return this;\n  }\n\n  private _subscribeToWidgetEvents(event: MessageEvent): void {\n    if (!event.data) {\n      return;\n    }\n\n    if (!areUrlsEqual(event.origin, getBaseUrl(this._config).origin)) {\n      return;\n    }\n\n    const eventData = event.data as TWidgetEvents;\n\n    if (\n      !eventData.widgetInstanceId ||\n      eventData.widgetInstanceId !== this._config.widgetInstanceId\n    ) {\n      return;\n    }\n\n    this._dispatchEvent(eventData);\n  }\n\n  private _registerSdkEventHandlers(): void {\n    this._on(\n      InternalEventTypes.APP_VERSION,\n      (event: IAppVersionEvent) => {\n        const [major] = event.payload.version.split('.') ?? [];\n        const parsedMajor = Number(major);\n\n        if (parsedMajor >= 2 && this.domNodes?.iframe) {\n          makeIframeResponsive(\n            this.domNodes.iframe,\n            this.domNodes.container,\n            this._config.containerNode\n          );\n          this._makeVisible();\n          this._removeEscapeHandler();\n        }\n      },\n      true\n    );\n\n    this._on(\n      WidgetEventTypes.WIDGET_CLOSE,\n      (_event) => {\n        if (this._isConfiguredAsHosted()) {\n          try {\n            this.widgetWindow?.close();\n          } catch (e) {\n            throw new Error('Could not close the widget window');\n          }\n        } else {\n          this.domNodes?.shadowHost.remove();\n          clearAllBodyScrollLocks();\n        }\n\n        this._teardownEventSubscriptions();\n      },\n      true\n    );\n\n    if (this._config.useSendCryptoCallbackVersion) {\n      this.on(InternalEventTypes.SEND_CRYPTO, this._onSendCrypto);\n    }\n\n    this._on(WidgetEventTypes.WIDGET_CONFIG_DONE, () => this._onConfigEvent(), true);\n    this._on(WidgetEventTypes.WIDGET_CONFIG_FAILED, () => this._onConfigEvent(), true);\n\n    this._on(\n      InternalEventTypes.WIDGET_CLOSE_REQUEST,\n      (_event) => {\n        if (this._isConfiguredAsHosted() || this._isConfiguredAsEmbedded()) {\n          return;\n        }\n\n        if (this._config.variant === 'mobile' || isCloseModalAlreadyOpen(this.domNodes!.overlay!)) {\n          return;\n        }\n\n        this.domNodes!.overlay!.appendChild(prepareCloseModalNode(this._dispatchEvent));\n      },\n      true\n    );\n\n    this._on(\n      InternalEventTypes.WIDGET_CLOSE_REQUEST_CONFIRMED,\n      (_event) => {\n        this._dispatchEvent({\n          type: WidgetEventTypes.WIDGET_CLOSE,\n          payload: null,\n          widgetInstanceId: this._config.widgetInstanceId,\n        });\n      },\n      true\n    );\n\n    this._on(\n      InternalEventTypes.WIDGET_CLOSE_REQUEST_CANCELLED,\n      (_event) => {\n        if (this._isConfiguredAsHosted() || this._isConfiguredAsEmbedded()) {\n          return;\n        }\n\n        const modal = this.domNodes!.overlay!.querySelector('.close-modal');\n\n        if (modal) {\n          modal.remove();\n        }\n      },\n      true\n    );\n  }\n\n  private _sendEventToWidget(event: TSdkEvents): void {\n    if (!this._isVisible) {\n      throw new Error(`Widget is not visible couldn't send the event`);\n    }\n    try {\n      (this.widgetWindow ?? this.domNodes?.iframe.contentWindow)?.postMessage(\n        event,\n        getBaseUrl(this._config).origin\n      );\n      // tslint:disable-next-line:no-empty\n    } catch {}\n  }\n\n  private _dispatchEvent(event: TAllEvents): void {\n    const { type } = event;\n\n    this._listeners[type]?.forEach((handler) => handler.callback(event));\n  }\n\n  private _handleEscapeClick(event: KeyboardEvent): void {\n    const escKeyCode = 27;\n\n    if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === escKeyCode) {\n      this._dispatchEvent({\n        type: InternalEventTypes.WIDGET_CLOSE_REQUEST,\n        payload: null,\n        internal: true,\n      });\n    }\n  }\n\n  private async _onSendCrypto(event: ISendCryptoEvent): Promise<void> {\n    let result: IOnSendCryptoResult | undefined;\n    if (event.eventVersion !== SEND_CRYPTO_SUPPORTED_VERSION) {\n      // tslint:disable-next-line:no-console\n      console.warn(`unsupported event version - '${event}'. This listener will have no effect.`);\n      return;\n    }\n    try {\n      result = await this._onSendCryptoCallback?.(\n        event.payload.assetInfo,\n        event.payload.amount,\n        event.payload.address\n      );\n      if (!result?.txHash) {\n        throw new Error('Missing txHash in the callback result');\n      }\n    } catch (e) {\n      let errorMessage: string | undefined;\n      if (typeof e === 'string') {\n        errorMessage = e;\n      } else if (e instanceof Error) {\n        errorMessage = e.message;\n      }\n      this._sendEventToWidget({\n        eventVersion: SEND_CRYPTO_SUPPORTED_VERSION,\n        type: InternalSdkEventTypes.SEND_CRYPTO_RESULT,\n        payload: {\n          error: errorMessage,\n        },\n      });\n      return;\n    }\n\n    this._sendEventToWidget({\n      eventVersion: SEND_CRYPTO_SUPPORTED_VERSION,\n      type: InternalSdkEventTypes.SEND_CRYPTO_RESULT,\n      payload: {\n        txHash: result.txHash,\n      },\n    });\n  }\n\n  // Event subscriptions aren't cleared so that host can receive a PAYMENT_SUCCESSFUL event\n  // even after the widget has been closed\n  private _teardownEventSubscriptions(): void {\n    this._removeEscapeHandler();\n    window.removeEventListener('message', this._subscribeToWidgetEvents);\n  }\n\n  private _removeEscapeHandler(): void {\n    window.removeEventListener('keydown', this._handleEscapeClick, true);\n  }\n\n  private _showUsingEmbeddedMode(): void {\n    const widgetUrl = initWidgetIframeUrl(this._config);\n\n    this.domNodes = initDOMNodeWithoutOverlay(widgetUrl, this._dispatchEvent, this._config);\n\n    if (!this.domNodes?.body) {\n      throw new Error(\"Couldn't find <body> element.\");\n    }\n\n    this._config.containerNode?.appendChild(this.domNodes.shadowHost);\n\n    this._isVisible = true;\n  }\n\n  private _showUsingOverlayMode(): void {\n    const widgetUrl = initWidgetIframeUrl(this._config);\n\n    this.domNodes = initDOMNodeWithOverlay(widgetUrl, this._dispatchEvent, this._config);\n\n    if (!this.domNodes?.body) {\n      throw new Error(\"Couldn't find <body> element.\");\n    }\n\n    this.domNodes.body.appendChild(this.domNodes.shadowHost);\n\n    this._isVisible = true;\n\n    disableBodyScroll();\n  }\n\n  private _showUsingHostedMode(): void {\n    const widgetUrl = initWidgetIframeUrl(this._config);\n\n    this.widgetWindow = window.open(widgetUrl) ?? undefined;\n  }\n\n  private _isConfiguredWithOverlay(): boolean {\n    return ['desktop', 'mobile'].includes(this._config.variant);\n  }\n\n  private _isConfiguredAsHosted(): boolean {\n    return ['hosted-desktop', 'hosted-mobile'].includes(this._config.variant);\n  }\n\n  private _isConfiguredAsEmbedded(): boolean {\n    return ['embedded-desktop', 'embedded-mobile'].includes(this._rawNormalizedConfig.variant!);\n  }\n\n  private _getHostConfigSdkParams(\n    config: IHostConfig,\n    useSendCryptoCallback?: boolean\n  ): Pick<\n    IHostConfigWithSdkParams,\n    | 'sdkType'\n    | 'sdkVersion'\n    | 'variant'\n    | 'widgetInstanceId'\n    | 'useSendCryptoCallbackVersion'\n    | 'closeable'\n  > {\n    const widgetVariant = determineWidgetVariant(config);\n    const closeable = config.closeable ?? ['desktop', 'mobile'].includes(widgetVariant);\n\n    return {\n      sdkType: 'WEB',\n      sdkVersion: SDK_VERSION,\n      variant: widgetVariant,\n      widgetInstanceId: getRandomIntString(),\n      closeable,\n      ...(useSendCryptoCallback\n        ? { useSendCryptoCallbackVersion: SEND_CRYPTO_SUPPORTED_VERSION }\n        : {}),\n    };\n  }\n\n  private _makeVisible() {\n    if (this._isConfiguredAsHosted()) {\n      return;\n    }\n\n    this.domNodes?.iframe.classList.add('visible');\n\n    const loader = this.domNodes?.shadow.querySelector('.loader-container');\n\n    if (loader) {\n      loader.remove();\n    }\n  }\n\n  private _onConfigEvent() {\n    this._makeVisible();\n  }\n}\n"],
  "mappings": "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",
  "names": ["PaymentMethodName", "PaymentMethodType", "PurchaseStatus", "EventSeverity", "WidgetEventTypes", "InternalEventTypes", "InternalSdkEventTypes", "RampInstantSDK", "_a"]
}
